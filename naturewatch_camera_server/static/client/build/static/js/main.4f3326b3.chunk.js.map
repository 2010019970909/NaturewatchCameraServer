{"version":3,"sources":["common/Header.js","common/CameraFeed.js","settings/SensitivitySetting.js","settings/ExposureSetting.js","settings/Settings.js","common/SessionButton.js","common/Index.js","gallery/ContentTypeSelector.js","gallery/ContentSelect.js","gallery/GalleryGrid.js","gallery/GalleryComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","React","Component","CameraFeed","props","status","this","activeFeed","inactiveFeed","closingFeed","src","alt","id","onClick","className","renderFeed","SensitivitySetting","ToggleButtonGroup","name","value","onChange","onValueChange","ToggleButton","type","ExposureSetting","_this","Object","classCallCheck","_super","call","onShutterChange","bind","assertThisInitialized","onShutterChangeEnd","cameraShutterSpeeds","1/30","1/40","1/50","1/60","1/80","1/100","1/125","1/160","1/200","1/250","1/320","1/400","1/500","1/640","1/800","1/1000","1/1250","1/1600","1/2000","1/2500","1/3200","1/4000","shutterSpeed","mode","keys","getIndexFromShutterSpeed","i","length","values","index","event","getShutterSpeedFromIndex","target","htmlFor","renderShutterSpeedFraction","min","max","step","onMouseUp","onTouchEnd","onModeChange","renderDetailedSettings","Settings","context","onSensitivityChange","onImageOrientationChange","state","isOpen","settings","rotation","exposure","iso","shutter_speed","sensitivity","getSettings","_this2","axios","get","then","res","data","setState","console","log","_this3","post","Button","variant","onClose","aria-controls","aria-expanded","_this4","currentSettings","postSettings","_this5","val","_this6","_this7","onOpen","Collapse","in","Accordion","Card","Toggle","as","eventKey","Body","settings_SensitivitySetting","settings_ExposureSetting","renderBackButton","SessionButton","handleClick","sessionStatus","onButtonClick","size","active","disabled","renderText","Index","idleTimer","onSessionButtonClick","onIdle","handleFeedRefresh","onSettingsOpen","onSettingsClose","feedStatus","time_started","isSettingsOpen","currentTime","Date","now","session","d","year","getFullYear","toString","month","getMonth","getDate","getHours","getMinutes","getSeconds","catch","Container","Row","Col","common_Header","sm","common_CameraFeed","captureStatus","xs","common_SessionButton","settings_Settings","react_router_dom","to","index_es","ref","element","document","debounce","timeout","ContentTypeSelector","onToggle","ContentSelect","isSelectActive","renderDeleteButtons","renderSelectButton","onSelectStart","ButtonGroup","aria-label","onDeleteAll","onDelete","onClearSelection","renderButtons","GalleryGrid","handleThumbnailClick","handleModalExit","activeContent","isModalShowing","item","onContentClick","GridListTile","key","cols","thumbnail","LazyLoad_default","renderSelectIcon","selected","CheckCircle","Modal","show","aria-labelledby","centered","onHide","renderModalContent","Footer","endsWith","Cancel","controls","GridList","cellHeight","content","map","renderItem","renderModal","GalleryComponent","handleBackButton","onContentTypeChange","onContentSelect","showingVideos","getPhotos","photoArray","forEach","photo","push","videoArray","video","substr","lastIndexOf","router","history","getVideos","tempContent","_loop","delete","_res","_loop2","clickedItem","gallery_ContentTypeSelector","gallery_ContentSelect","gallery_GalleryGrid","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f3326b3.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    render() {\n        return(\n            <h1>My Naturewatch</h1>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass CameraFeed extends React.Component {\n\n    renderFeed(props) {\n        const status = props.status;\n        if (status === \"active\") {\n            return this.activeFeed()\n        } else if (status === \"inactive\") {\n            return this.inactiveFeed()\n        } else {\n            return this.closingFeed(status)\n        }\n    }\n\n    activeFeed() {\n        return (\n            <img src=\"/api/feed\" alt=\"Camera feed\"/>\n        );\n    }\n\n    inactiveFeed() {\n        return (\n           <div id=\"inactive-feed\">\n               <span onClick={this.props.onClick}><h2>Preview paused <br/>to save power. Tap to refresh.</h2></span>\n           </div>\n        )\n    }\n\n    closingFeed(status) {\n        return (\n            <div id=\"closing-feed\">\n                <span><h2>Preview ends <br/>in {status}</h2></span>\n            </div>\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"feed\">\n                {this.renderFeed(this.props)}\n            </div>\n        );\n    }\n}\n\nexport default CameraFeed;","import React from 'react';\nimport {ToggleButtonGroup, ToggleButton} from 'react-bootstrap';\n\nclass SensitivitySetting extends React.Component {\n    render() {\n        return (\n            <ToggleButtonGroup name=\"sensitivity\" value={this.props.value} onChange={this.props.onValueChange}>\n                <ToggleButton type=\"radio\" value=\"less\">Less</ToggleButton>\n                <ToggleButton type=\"radio\" value=\"default\">Default</ToggleButton>\n                <ToggleButton type=\"radio\" value=\"more\">More</ToggleButton>\n            </ToggleButtonGroup>\n        );\n    }\n}\n\nexport default SensitivitySetting;","import React from 'react';\nimport {ToggleButtonGroup, ToggleButton} from 'react-bootstrap';\n\nclass ExposureSetting extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onShutterChange = this.onShutterChange.bind(this);\n        this.onShutterChangeEnd = this.onShutterChangeEnd.bind(this);\n\n        this.cameraShutterSpeeds = {\n            \"1/30\": 33333,\n            \"1/40\": 25000,\n            \"1/50\": 20000,\n            \"1/60\": 16666,\n            \"1/80\": 12500,\n            \"1/100\": 10000,\n            \"1/125\": 8000,\n            \"1/160\": 6250,\n            \"1/200\": 5000,\n            \"1/250\": 4000,\n            \"1/320\": 3125,\n            \"1/400\": 2500,\n            \"1/500\": 2000,\n            \"1/640\": 1563,\n            \"1/800\": 1250,\n            \"1/1000\": 1000,\n            \"1/1250\": 800,\n            \"1/1600\": 625,\n            \"1/2000\": 500,\n            \"1/2500\": 400,\n            \"1/3200\": 313,\n            \"1/4000\": 250\n        };\n    }\n\n    renderShutterSpeedFraction(shutterSpeed) {\n        if (this.props.mode === \"auto\") {\n            return \"auto\";\n        }\n        else {\n\n            return Object.keys(this.cameraShutterSpeeds)[this.getIndexFromShutterSpeed(shutterSpeed)];\n        }\n    }\n\n    getIndexFromShutterSpeed(shutterSpeed) {\n        for (var i=0; i < Object.keys(this.cameraShutterSpeeds).length; i++) {\n            if (Object.values(this.cameraShutterSpeeds)[i] === shutterSpeed) {\n                return i;\n            }\n        }\n        return 0;\n    }\n\n    getShutterSpeedFromIndex(index) {\n        return Object.values(this.cameraShutterSpeeds)[index];\n    }\n\n    onShutterChange(event) {\n        this.props.onShutterChange(this.getShutterSpeedFromIndex(event.target.value));\n    }\n\n    onShutterChangeEnd(event) {\n        this.props.onShutterChangeEnd(this.getShutterSpeedFromIndex(event.target.value));\n    }\n\n    renderDetailedSettings() {\n        if (this.props.mode !== \"auto\") {\n            return (\n                <div>\n                    <label htmlFor=\"shutter-speed\" className=\"shutter-speed-label\">\n                        Fixed Shutter Speed: <span>{this.renderShutterSpeedFraction(this.props.shutterSpeed)}</span>\n                    </label>\n                    <br/>\n                    <input\n                        type=\"range\"\n                        id=\"shutter-speed\"\n                        min=\"0\"\n                        max={Object.keys(this.cameraShutterSpeeds).length-1}\n                        step=\"1\"\n                        value={this.getIndexFromShutterSpeed(this.props.shutterSpeed)}\n                        onChange={this.onShutterChange}\n                        onMouseUp={this.onShutterChangeEnd}\n                        onTouchEnd={this.onShutterChangeEnd}\n                    />\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ToggleButtonGroup name=\"exposure\" value={this.props.mode} onChange={this.props.onModeChange}>\n                    <ToggleButton type=\"radio\" value=\"auto\">Auto</ToggleButton>\n                    <ToggleButton type=\"radio\" value=\"off\">Manual</ToggleButton>\n                </ToggleButtonGroup>\n                <br/>\n                {this.renderDetailedSettings()}\n            </div>\n        );\n    }\n}\n\nexport default ExposureSetting;","import React from 'react';\nimport axios from 'axios';\nimport {Button, Collapse, Accordion, Card} from 'react-bootstrap';\nimport SensitivitySetting from './SensitivitySetting';\nimport ExposureSetting from './ExposureSetting';\nimport PropTypes from \"prop-types\";\n\nclass Settings extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.onSensitivityChange = this.onSensitivityChange.bind(this);\n        this.onImageOrientationChange = this.onImageOrientationChange.bind(this);\n        this.onShutterChange = this.onShutterChange.bind(this);\n        this.onShutterChangeEnd = this.onShutterChangeEnd.bind(this);\n        this.onModeChange = this.onModeChange.bind(this);\n\n        this.state = {\n            isOpen: false,\n            settings: {\n                rotation: null,\n                exposure: {\n                    mode: \"\",\n                    iso: \"\",\n                    shutter_speed: \"\"\n                },\n                sensitivity: \"\"\n            }\n        };\n    }\n\n    componentDidMount() {\n        this.getSettings();\n    }\n\n    getSettings() {\n        axios.get('/api/settings')\n            .then((res) => {\n                const settings = res.data;\n                this.setState({settings: settings});\n                console.log(\"INFO: settings received.\");\n                console.log(this.state.settings);\n            });\n    }\n\n    postSettings() {\n        console.log(this.state.settings);\n        axios.post('api/settings', this.state.settings)\n            .then((res) => {\n                console.log(\"INFO: settings sent.\");\n                const settings = res.data;\n                this.setState({settings: settings}, () => {\n                    console.log(\"INFO: Updated settings\");\n                    console.log(this.state.settings);\n                });\n            });\n    }\n\n    renderBackButton() {\n        if (this.props.isOpen) {\n            return (\n                <Button\n                    variant=\"secondary\"\n                    onClick={this.props.onClose}\n                    aria-controls=\"collapse-settings\"\n                    aria-expanded=\"false\"\n                    className=\"short\"\n                >\n                    Back\n                </Button>\n            )\n        }\n        else return null;\n    }\n\n    onSensitivityChange(value) {\n        console.log(\"INFO: Received sensitivity value\");\n        console.log(value);\n        let currentSettings = this.state.settings;\n\n        console.log(\"Current settings: \");\n        console.log(currentSettings);\n\n        currentSettings.sensitivity = value;\n\n        console.log(\"Changed settings: \");\n        console.log(currentSettings);\n        this.setState({\n            settings: currentSettings\n        }, () => {\n            console.log(\"INFO: Changed sensitivity.\");\n            console.log(this.state.settings);\n            this.postSettings();\n        });\n    }\n\n    onImageOrientationChange() {\n        let currentSettings = this.state.settings;\n        currentSettings.rotation = !currentSettings.rotation;\n        this.setState({\n            settings: currentSettings\n        }, () => {\n            console.log(\"INFO: Changed orientation.\");\n            this.postSettings();\n        });\n    }\n\n    onShutterChange(val) {\n        let currentSettings = this.state.settings;\n        currentSettings.exposure.shutter_speed = val;\n        this.setState({\n            settings: currentSettings\n        });\n    }\n\n    onShutterChangeEnd(val) {\n        let currentSettings = this.state.settings;\n        currentSettings.exposure.shutter_speed = val;\n        this.setState({\n            settings: currentSettings\n        }, () => {\n            console.log(\"INFO: Changed shutter speed.\");\n            this.postSettings();\n        });\n    }\n\n    onModeChange(value) {\n        let currentSettings = this.state.settings;\n        currentSettings.exposure.mode = value;\n        this.setState({\n            settings: currentSettings\n        }, () => {\n            console.log(\"INFO: Changed exposure mode\");\n            this.postSettings();\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"settings\">\n                <Button\n                    variant=\"secondary\"\n                    onClick={this.props.onOpen}\n                    aria-controls=\"collapse-settings\"\n                    aria-expanded={this.props.isOpen}\n                    className=\"settings-button\"\n                >\n                    Settings\n                </Button>\n                <Collapse in={this.props.isOpen}>\n                    <Accordion>\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey={0}>\n                                Sensitivity\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey={0}>\n                                <Card.Body>\n                                    <SensitivitySetting\n                                        onValueChange={this.onSensitivityChange}\n                                        value={this.state.settings.sensitivity}\n                                    />\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey={1}>\n                                Image Orientation\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey={1}>\n                                <Card.Body>\n                                    <Button\n                                        variant=\"primary\"\n                                        onClick={this.onImageOrientationChange}\n                                    >\n                                        Flip 180\n                                    </Button>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey={2}>\n                                Exposure\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey={2}>\n                                <Card.Body>\n                                    <ExposureSetting\n                                        mode={this.state.settings.exposure.mode}\n                                        shutterSpeed={this.state.settings.exposure.shutter_speed}\n                                        onShutterChange={this.onShutterChange}\n                                        onShutterChangeEnd={this.onShutterChangeEnd}\n                                        onModeChange={this.onModeChange}\n                                    />\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n                </Collapse>\n                {this.renderBackButton()}\n            </div>\n        );\n    }\n}\n\nSettings.propTypes = {\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default Settings;","import React from 'react';\nimport {Button} from 'react-bootstrap';\n\nclass SessionButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    renderText() {\n        if (this.props.sessionStatus === this.props.type) {\n            return (\n                <span>{\"Stop \" + this.props.type + \" capture\"}</span>\n            );\n        } else {\n            return (\n                <span>{\"Start \" + this.props.type + \" capture\"}</span>\n            );\n        }\n    }\n\n    handleClick() {\n        this.props.onButtonClick(this.props.type);\n    }\n\n    render() {\n        return(\n            <Button\n                size=\"lg\"\n                className=\"startsession\"\n                onClick={this.handleClick}\n                active={\n                    this.props.sessionStatus === this.props.type\n                }\n                disabled={\n                    this.props.sessionStatus !== \"inactive\" && this.props.sessionStatus !== this.props.type\n                }\n            >\n                {this.renderText()}\n            </Button>\n        )\n    }\n}\n\nexport default SessionButton;","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport IdleTimer from 'react-idle-timer';\nimport axios from 'axios';\nimport Header from './Header'\nimport CameraFeed from './CameraFeed'\nimport Settings from '../settings/Settings';\nimport SessionButton from './SessionButton';\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.idleTimer = null;\n\n        this.onSessionButtonClick = this.onSessionButtonClick.bind(this);\n        this.onIdle = this.onIdle.bind(this);\n        this.handleFeedRefresh = this.handleFeedRefresh.bind(this);\n        this.onSettingsOpen = this.onSettingsOpen.bind(this);\n        this.onSettingsClose = this.onSettingsClose.bind(this);\n\n        this.state = {\n            feedStatus: \"active\",\n            sessionStatus: {\n                mode: \"inactive\",\n                time_started: 0\n            },\n            isSettingsOpen: false\n        };\n    }\n\n    componentDidMount() {\n        // Get session object form camera\n        axios.get('/api/session')\n            .then((res) => {\n                const status = res.data;\n                this.setState({sessionStatus: status});\n                console.log(\"INFO: status received.\");\n                console.log(this.state.sessionStatus);\n            });\n        // Send time to camera.\n        //let currentTime = this.formatTime(new Date());\n        let currentTime = Date.now() / 1000;\n        axios.post('/api/time/' + currentTime)\n            .then((res) => {\n                const status = res.data;\n                console.log(\"INFO: Sent time \" + currentTime + \" to camera.\");\n                console.log(status);\n            });\n    }\n\n    captureStatus() {\n        if (this.state.sessionStatus.mode === \"inactive\") {\n            return (\n                <p className=\"feed-status\">Capture is <u>off</u></p>\n            );\n        } else {\n            return (\n                <p className=\"feed-status\">Capture is <u>on</u></p>\n            );\n        }\n    }\n\n    getSessionButtonText(type) {\n        // Deal with terminology...\n        if (type === \"photo\") type = \"image\";\n        let session = this.state.sessionStatus.mode;\n        if (session === \"photo\") type = \"image\";\n\n        if (session === type) {\n            return \"Stop \" + type + \" Capture\";\n        }\n        else {\n            return \"Start \" + type + \" Capture\";\n        }\n    }\n\n    formatTime(d) {\n        let year = d.getFullYear().toString();\n        let month = \"\";\n        if (d.getMonth()+1 < 10) {\n            month = \"0\" + (d.getMonth()+1).toString();\n        } else {\n            month += (d.getMonth()+1).toString();\n        }\n        let date = \"\";\n        if (d.getDate() < 10) {\n            date = \"0\" + d.getDate().toString();\n        } else {\n            date = d.getDate().toString();\n        }\n        let hours = \"\";\n        if (d.getHours() < 10) {\n            hours = \"0\" + d.getHours().toString();\n        } else {\n            hours = d.getHours().toString();\n        }\n        let minutes = \"\";\n        if (d.getMinutes() < 10) {\n            minutes = \"0\" + d.getMinutes().toString();\n        } else {\n            minutes = d.getMinutes().toString();\n        }\n        let seconds = \"\";\n        if (d.getSeconds() < 10) {\n            seconds = \"0\" + d.getSeconds().toString();\n        } else {\n            seconds = d.getSeconds().toString();\n        }\n\n        return year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    }\n\n    onSessionButtonClick(type) {\n        if (this.state.sessionStatus.mode === \"inactive\") {\n            axios.post('/api/session/start/' + type)\n                .then((res) => {\n                    this.setState({\n                        sessionStatus: res.data\n                    }, () => {\n                        console.log(this.state.sessionStatus);\n                    });\n                }).catch(() => {\n                    console.log(\"ERROR: POST request failed whilst opening session.\");\n                });\n        } else {\n            axios.post('/api/session/stop')\n                .then((res) => {\n                    this.setState({\n                        sessionStatus: res.data\n                    }, () => {\n                        console.log(this.state.sessionStatus);\n                    });\n                }).catch(() => {\n                    console.log(\"ERROR: POST request failed whilst closing session.\");\n                });\n        }\n    }\n\n    onIdle() {\n        console.log(\"INFO: Feed status timeout.\");\n        this.setState({\n            feedStatus: \"inactive\"\n        });\n    }\n\n    handleFeedRefresh() {\n        console.log(\"INFO: Feed refreshed.\");\n        this.setState({\n            feedStatus: \"active\"\n        });\n    }\n\n    onSettingsOpen() {\n        this.setState({isSettingsOpen: true});\n    }\n\n    onSettingsClose() {\n        this.setState({isSettingsOpen: false});\n    }\n\n    render() {\n        return(\n            <div className=\"index\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <Header/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={8}>\n                            <CameraFeed\n                                status={this.state.feedStatus}\n                                onClick={this.handleFeedRefresh}\n                            />\n                            {this.captureStatus()}\n                        </Col>\n                        <Col sm={4}>\n                            {!this.state.isSettingsOpen && <Row>\n                                <Col xs={6}>\n                                    <SessionButton\n                                        type={\"video\"}\n                                        onButtonClick={this.onSessionButtonClick}\n                                        sessionStatus={this.state.sessionStatus.mode}\n                                    />\n                                </Col>\n                                <Col xs={6}>\n                                    <SessionButton\n                                        type={\"photo\"}\n                                        onButtonClick={this.onSessionButtonClick}\n                                        sessionStatus={this.state.sessionStatus.mode}\n                                    />\n                                </Col>\n                            </Row>}\n                            <Settings\n                                isOpen={this.state.isSettingsOpen}\n                                onOpen={this.onSettingsOpen}\n                                onClose={this.onSettingsClose}\n                            />\n                            {!this.state.isSettingsOpen && <Link to=\"/gallery\" className=\"btn btn-secondary\">Gallery</Link>}\n                        </Col>\n                    </Row>\n                </Container>\n                <IdleTimer\n                    ref={ref => { this.idleTimer = ref }}\n                    element={document}\n                    onIdle={this.onIdle}\n\t\t            debounce={250}\n                    timeout={1000 * 60}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Index;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContentTypeSelector extends React.Component {\n    render() {\n        return (\n            <div className=\"content-type-selector float-right\">\n                <p>Photo</p>\n                <label className=\"switch\">\n                    <input type=\"checkbox\" onClick={this.props.onToggle}/>\n                    <span className=\"slider round\"></span>\n                </label>\n                <p>Video</p>\n            </div>\n        );\n    }\n}\n\nContentTypeSelector.propTypes = {\n    onToggle: PropTypes.func.isRequired\n};\n\nexport default ContentTypeSelector;","import React from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nclass ContentSelect extends React.Component {\n    renderButtons() {\n        if (this.props.isSelectActive) {\n            return this.renderDeleteButtons();\n        }\n        else {\n            return this.renderSelectButton();\n        }\n    }\n\n    renderSelectButton() {\n        return(\n            <Button variant=\"primary\" onClick={this.props.onSelectStart}>Select</Button>\n        );\n    }\n\n    renderDeleteButtons() {\n        return(\n            <ButtonGroup aria-label=\"delete\">\n                <Button variant=\"primary\" onClick={this.props.onDeleteAll}>Delete All</Button>\n                <Button variant=\"primary\" onClick={this.props.onDelete}>Delete</Button>\n                <Button variant=\"primary\" onClick={this.props.onClearSelection}>Cancel</Button>\n            </ButtonGroup>\n        );\n    }\n\n    render() {\n        return(\n            <div className=\"content-select\">\n                {this.renderButtons()}\n            </div>\n        );\n    }\n}\n\nContentSelect.propTypes = {\n    isSelectActive: PropTypes.bool.isRequired,\n    onSelectStart: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onDeleteAll: PropTypes.func.isRequired,\n    onClearSelection: PropTypes.func.isRequired\n};\n\nexport default ContentSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Modal, Button} from 'react-bootstrap';\nimport LazyLoad from 'react-lazy-load';\nimport {CheckCircle, Cancel} from '@material-ui/icons'\nimport {GridList, GridListTile} from \"@material-ui/core\";\n\nclass GalleryGrid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleThumbnailClick = this.handleThumbnailClick.bind(this);\n        this.handleModalExit = this.handleModalExit.bind(this);\n\n        this.state = {\n            activeContent: \"\",\n            isModalShowing: false\n        };\n    }\n\n    handleThumbnailClick(item) {\n        if (this.props.isSelectActive) {\n            this.props.onContentClick(item);\n        } else {\n            this.setState({\n                activeContent: item.src,\n                isModalShowing: true\n            }, () => {\n                console.log(\"Updated active content with value \" + item.src);\n            });\n        }\n    }\n\n    handleModalExit() {\n        this.setState({\n            activeContent: \"\",\n            isModalShowing: false\n        });\n    }\n\n    renderItem(item, index) {\n        return (\n            <GridListTile key={index} cols={1}>\n            <div key={item.thumbnail} className=\"gallery-thumbnail\">\n                <LazyLoad>\n                    <img alt=\"Captured by Naturewatch Camera\" src={item.thumbnail} onClick={this.handleThumbnailClick.bind(this, item)}/>\n                </LazyLoad>\n                {this.renderSelectIcon(item)}\n            </div>\n            </GridListTile>\n        );\n\n    }\n\n    renderSelectIcon(item) {\n        if (this.props.isSelectActive) {\n            if (item.selected) {\n                return (\n                    <CheckCircle/>\n                );\n            } else {\n                return null;\n            }\n        }\n    }\n\n    renderModal() {\n        return (\n            <Modal\n                show={this.state.isModalShowing}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                className=\"modal-gallery-content\"\n                onHide={this.handleModalExit}\n            >\n                <Modal.Body>\n                    {this.renderModalContent()}\n                </Modal.Body>\n                <Modal.Footer>\n                    {this.state.activeContent.endsWith(\".jpg\") &&\n                        <p className=\"mr-auto\">Press and hold photo to download.</p>\n                    }\n                    <Button variant=\"primary\" onClick={this.handleModalExit}>\n                        <Cancel/>\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    renderModalContent() {\n        if (this.state.activeContent.endsWith(\".mp4\")) {\n            return (\n                <video controls>\n                    <source src={this.state.activeContent} type=\"video/mp4\"/>\n                    Your browser does not support the video tag.\n                </video>\n            );\n        } else {\n            return (\n                <img alt=\"\" src={this.state.activeContent}/>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"gallery-grid\">\n                <GridList\n                    cellHeight={100}\n                    className={\"gallery-grid-list\"}\n                    cols={3}\n                >\n                    {this.props.content.map((item, index) => this.renderItem(item, index))}\n                </GridList>\n                {this.renderModal()}\n            </div>\n        );\n    }\n}\n\nGalleryGrid.propTypes = {\n    content: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onContentClick: PropTypes.func.isRequired,\n    isSelectActive: PropTypes.bool.isRequired\n};\n\nexport default GalleryGrid;","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n//import Gallery from 'react-grid-gallery';\nimport axios from 'axios';\nimport Header from '../common/Header';\nimport ContentTypeSelector from './ContentTypeSelector';\nimport ContentSelect from './ContentSelect';\nimport GalleryGrid from './GalleryGrid';\n\nclass GalleryComponent extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.handleBackButton = this.handleBackButton.bind(this);\n        this.onContentTypeChange = this.onContentTypeChange.bind(this);\n        this.onSelectStart = this.onSelectStart.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.onDeleteAll = this.onDeleteAll.bind(this);\n        this.onClearSelection = this.onClearSelection.bind(this);\n        this.onContentSelect = this.onContentSelect.bind(this);\n\n        this.state = {\n            content: [],\n            showingVideos: false,\n            isSelectActive: false\n        }\n\n    }\n\n    componentDidMount() {\n        this.getPhotos();\n    }\n\n    getPhotos() {\n        axios.get('/data/photos')\n            .then((res) => {\n                let photoArray = [];\n                let i = 0;\n                res.data.forEach((photo) => {\n                    photoArray.push({\n                        src: '/data/photos/' + photo,\n                        thumbnail: '/data/photos/thumb_' + photo,\n                        index: i,\n                        selected: false\n                    });\n                    i++;\n                });\n                this.setState( {\n                    content: photoArray\n                }, () => {\n                    console.log(this.state.content)\n                });\n        });\n    }\n\n    getVideos() {\n        axios.get('/data/videos')\n            .then((res) => {\n                let videoArray = [];\n                let i = 0;\n                res.data.forEach((video) => {\n                    videoArray.push({\n                        src: '/data/videos/' + video,\n                        thumbnail: '/data/videos/thumb_' + video.substr(0, video.lastIndexOf('.')) + '.jpg',\n                        index: i,\n                        selected: false\n                    });\n                    i++;\n                });\n                this.setState( {\n                    content: videoArray\n                }, () => {\n                    console.log(this.state.content)\n                });\n            });\n    }\n\n    handleBackButton() {\n        this.context.router.history.push('/');\n    }\n\n    onContentTypeChange() {\n        if (this.state.showingVideos) {\n            this.getPhotos();\n            this.setState({\n                showingVideos: false\n            });\n        } else {\n            this.getVideos();\n            this.setState({\n                showingVideos: true\n            });\n        }\n    }\n\n    onSelectStart() {\n        this.setState({\n            isSelectActive: true\n        });\n    }\n\n    onDelete() {\n        let tempContent = this.state.content;\n        for (let i=0; i<tempContent.length; i++) {\n            if (tempContent[i].selected) {\n                axios.delete(tempContent[i].src)\n                    .then((res) => {\n                        axios.delete(tempContent[i].thumbnail)\n                            .then((_res) => {\n                                console.log(\"Deleted \" + tempContent[i].src);\n                                if (this.state.showingVideos) {\n                                    this.getVideos();\n                                } else {\n                                    this.getPhotos();\n                                }\n                            });\n                    });\n            }\n        }\n    }\n\n    onDeleteAll() {\n        let tempContent = this.state.content;\n        for (let i=0; i<tempContent.length; i++) {\n            axios.delete(tempContent[i].thumbnail)\n                .then((res) => {\n                    axios.delete(tempContent[i].src)\n                        .then((_res) => {\n                            console.log(\"Deleted \" + tempContent[i].src);\n                            if (this.state.showingVideos) {\n                                this.getVideos();\n                            } else {\n                                this.getPhotos();\n                            }\n                        });\n                });\n        }\n\n    }\n\n    onClearSelection() {\n        this.setState({\n            isSelectActive: false\n        }, () => {\n            if (this.state.showingVideos) {\n                this.getVideos();\n            } else {\n                this.getPhotos();\n            }\n        })\n    }\n\n    onContentSelect(clickedItem) {\n        console.log(clickedItem.index);\n        let tempContent = this.state.content;\n        for (let i=0; i<tempContent.length; i++) {\n            if (tempContent[i].index === clickedItem.index) {\n                tempContent[i].selected = !tempContent[i].selected;\n                break;\n            }\n        }\n        this.setState({\n            content: tempContent\n        }, () => {\n            console.log(this.state.content);\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Header/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <ContentTypeSelector onToggle={this.onContentTypeChange}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={6}>\n                        <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n                    </Col>\n                    <Col xs={6}>\n                        <ContentSelect\n                            onSelectStart={this.onSelectStart}\n                            onDelete={this.onDelete}\n                            onDeleteAll={this.onDeleteAll}\n                            onClearSelection={this.onClearSelection}\n                            isSelectActive={this.state.isSelectActive}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <GalleryGrid\n                            content={this.state.content}\n                            onContentClick={this.onContentSelect}\n                            isSelectActive={this.state.isSelectActive}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default GalleryComponent;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Index from \"./common/Index\";\nimport GalleryComponent from \"./gallery/GalleryComponent\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Route path=\"/\" exact component={Index} />\n                <Route path=\"/gallery\" exact component={GalleryComponent} />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}